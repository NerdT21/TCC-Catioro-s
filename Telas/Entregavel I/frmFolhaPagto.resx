<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxImgFuncionario.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAABHNCSVQICAgIfAhkiAAAAAFzUkdCAK7O
        HOkAAAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA3VAAAN1QE91ljxAAAAGXRFWHRTb2Z0d2FyZQB3d3cu
        aW5rc2NhcGUub3Jnm+48GgAABsNJREFUeF7tm3tsU1UcxydKYuJbo/whBv/xT/3HaAz/SEICW9cOBebj
        H4jE7C9hYW5dx0MbFQGjonu06+P2rmOFMUVkuM129/a19QEUZBuy4Rhjg2yDAevatWv3up4fHBJNTl1n
        n7e9n+SbELqe3/f3yzn3PO5pjoCAgFwuX/a7dv2b7VRumbV+Q5ulrmCY1eUH/ymzvmAIPoO/YdS5b8B3
        8Nezl1ZN3kqWkhxi6fy7jsb3vJetO8M3e77m/INV3MyYFonC0t77P/gM/sbRWOhlafEdRpf/LasUv4ib
        yx5+U+Q/Y6YLKNSzpnvNxeGpoRqOu3t4SZoaqubgu9AG6p1qC/3O07j5zIbR5L3P0hJvr6U4NDOqJRZn
        KQqjNi6x20OsTuJFbW/GYTIPj+r15WadWG8zbJryXa0kFiMWTQ78yNkaNk6Z6yRaiIXDZgaWmjWPm2lJ
        59lftwZnb1LEAsRDszd13NkTW4IsXWA31q97DIfnN9Ab0JC1dbUWBRdu64mJx1MQ40JLEZq5JWaLfM0j
        2AZ/Yesk9LnmbYFkFO+BINa5kx8FYHLBNviJSSf6sMOwKTA3ThMTTaRmb9Gc3bAxwGpzC7EdftGqy3ue
        1Yl9iZgwotXkwA8cWitOMvq1z2Fb/MFMiw1onRYiJZZMXWI+CaEJrA7b4gdtytyX0cSR0Bk3WsEuBhbb
        rFa0CttLf2CL1WvekfLe90Cw0GYo8TfYXnoDSwdGJ54MDCuIyaRCsO1Dz+OJpqbCh7HN9MWoXre6w7DZ
        R0oklUIzsh9OfLDN9AUN38/6LMUzpCRSqV52R5jRiiqwzfTFot/AjPXsIyaRSo12f8VZ9RuM2Gb6Aoeh
        /mtVxCRSKd9gJWfWS65hm+kLQ+UHYOlASiKVgqMz9HjxY5vpS7s2b24+ifveaAWekLdZbDN9MWlFc8k8
        OIhW8+M8KaAwhGNEmERiRFjGxAhD5e1FC+lpUhKpFFpIB9s1Ihm2mb7c28odKZwkJZFK2Rs2+nixlYMb
        A2ydZByeOaREUiF4Y8fS4jGOy3kI20xvhOOsGGE0a1fAIWZoRE1MKJkKjag4VieaNirXvYDt8QOzvoBK
        myP9ugIVtsUf0AP7WTSUJ1P9UgmNBC9v780YtfkfwOyXqteatoZ3fe3q9ZuwHX7C0GLqXPM2fwperPvN
        tKQW2+Av96526CTWrraipNxOgBgXWosCLC1hM+JqBwCXi1hKZD1zYqsv0ZeLzvyyxcdQEnPGXC56gHC9
        LU4IFyzjgHDFN04sdsn8frHqhUvmi/GvnznoC1pRjxpkKFHApMnlQPBvtJsYhM+EnzkICAgICAgICAhk
        DUUqz/KSavtamcqpqtC4bpQqOrlECNqGGBALYuLw/EQu55aVKexvV2hdjeW1zsCXhvNene3G/Km+Kc42
        ynH2sfgK2jzV5+co+/X5LxrOeyFmhdp9FDyAF2wr/Smpsb1UrnYclGlct+WHPcF65wjXfi1MTDqRMqGY
        eufIwud6TwC8yGpdB6SV7pXYZvpRVmt7pVzlNCCFv2vumz5xcZKYWCoEXsATeCtXuQ6DV2w79Xxa7Vgl
        U7uPlCkds9Vt/TOmweT3tmhlHAxxla39s+AVPS8N4B2nkXykVOcTZbWd1dJaR0jZPjjNDM0QTaej2pFX
        5DkoVTpCZQqUA8oFp5UcSmqcq2Vq58j+pu5g25Ug0SQf1Nof5CAHNLRHShSdb+H0EgfMZlKVY7dM7Qoc
        9YwvkEzxUUc8txbKUU7S2s6KhM3Y5SrPU6jXWfcd65qAIUAywmeZUE77GrsmUI6W7ZXuJ3Ha8aFY416B
        et2fh5ovB60jC0QDmSDr6AL3/cm+IORaqnTE5zLS/Z7n6learoZthKCZJshRYRwIoZwvQ+64DP8POW15
        FE33nqq2K2FSsExWZUt/uELjPgs1wOVYOmgFrzx4/GLAhro2KUgmC3I+8HNPAPXEGlyOpVFa0yHZTZ0O
        mK/PEQNkg9jhWW4XdXqqTNkhxmWJDjjJQL1vrOmPO8SGs0nHzt/mYM0rl1uiv6gkVTiL9h/rniI1mI1C
        yxs/2rF8jMuzOGjcXz/R4yU2lo063j3ByVSuYVye/6ZUYX9tD33GR2oom7VHd9q3s8r5Ki5TZKRK516F
        aWCa1Eg2q8Y4MI0W17txmSJToXW7f7pwl9hINgsmVDQjO3CZIoMKONzSHyA2ks1q+SvA7dK6Fv+1Z7nK
        6WeGM++wIFbBeSfUBpcpMqXKzoVEvPThu6AmUBtcpsjA60FSA4JQAVFtcJkiIxQwsoQCxiihgDEq6gIK
        iixcJgGBtCAn52+ovorJw+5VwAAAAABJRU5ErkJggg==
</value>
  </data>
</root>