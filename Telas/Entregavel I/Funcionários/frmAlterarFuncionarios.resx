<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbxFoto.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>